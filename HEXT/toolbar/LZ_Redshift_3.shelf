<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="lz_redshift_3" label="LZ Redshift 3.0">
    <memberTool name="LZ RS Setup"/>
    <memberTool name="rs_cam_from_view"/>
    <memberTool name="LZ RS LightDome"/>
    <memberTool name="Rs vol shader"/>
    <memberTool name="lz_rs_viewport"/>
    <memberTool name="Options_Panel0"/>
    <memberTool name="Add RS Prefix"/>
    <memberTool name="batchProxy"/>
    <memberTool name="find_all_textures"/>
    <memberTool name="matte_grid"/>
    <memberTool name="spheres"/>
    <memberTool name="add_reflection_sphere"/>
    <memberTool name="submit_RS_render_Deadline"/>
    <memberTool name="merge_proxies"/>
    <memberTool name="unpack_proxies"/>
    <memberTool name="add_custom_aovs"/>
    <memberTool name="take_sceenshot"/>
    <memberTool name="viewMaskOpacity"/>
    <memberTool name="look_trough_light"/>
    <memberTool name="create_aovs"/>
    <memberTool name="export_node_to_ABC"/>
    <memberTool name="tool_1"/>
  </toolshelf>

  <tool name="lz_rs_viewport" label="RS Viewport IPR" icon="RS_openIPR_icon">
    <script scriptType="python"><![CDATA[import toolutils
sv = toolutils.sceneViewer()
if sv.isViewingSceneGraph():
    if sv.currentHydraRenderer() == "Redshift":
        sv.setHydraRenderer('Houdini GL')
    else:
        sv.setHydraRenderer("Redshift")
else:
    hou.hscript('Redshift_openViewportRenderingIPR')]]></script>
  </tool>

  <tool name="viewMaskOpacity" label="View Mask Opacity" icon="hicon:/SVGIcons.index?COP2_window.svg">
    <script scriptType="python"><![CDATA[import toolutils
st = toolutils.sceneViewer().curViewport().settings()
st.setViewMaskOpacity(1 if st.viewMaskOpacity() < 0.5 else 0.4)


]]></script>
  </tool>
</shelfDocument>
